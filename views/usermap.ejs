<!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title>Main Map</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />

  <!-- jquery -->
  <script src="/javascripts/jquery-3.1.1.min.js"></script>

  <!-- leaflet -->
  <link rel="stylesheet" href="/stylesheets/leaflet.css"/>
  <script src="/javascripts/leaflet.js"></script>

  <!-- leaflet draw -->
  <link rel="stylesheet" href="/stylesheets/leaflet.draw.css" />
	<script src="/javascripts/leaflet.draw.js"></script>

  <!-- leaflet cluster -->
  <link rel="stylesheet" href="/stylesheets/MarkerCluster.css" />
  <link rel="stylesheet" href="/stylesheets/MarkerCluster.Default.css" />
  <script src="/javascripts/leaflet.markercluster.js"></script>

  <!-- leaflet search -->
  <link rel="stylesheet" href="/stylesheets/leaflet-geocoder-mapzen.css">
  <script src="/javascripts/leaflet-geocoder-mapzen.js"></script>

  <!-- html style -->
  <link rel="stylesheet" href="/stylesheets/adminmap.css"/>

  <!-- bootstrap -->
  <link rel="stylesheet" href="/stylesheets/bootstrap.min.css"/>
	<link rel="stylesheet" href="/stylesheets/superhero-bootstrap.min.css"/>
	<script src="/javascripts/bootstrap.min.js"></script>

  <!-- Material Icon -->
  <link rel="stylesheet" href="/stylesheets/icon.css"/>

  <!-- Toastr -->
  <link rel="stylesheet" href="/stylesheets/toastr.min.css"/>
  <script src="/javascripts/toastr.min.js"></script>

  <!-- Firebase database stuff -->
  <script src="/javascripts/firebase.js"></script>
  <script src="/javascripts/firebase-app.js"></script>
  <script src="/javascripts/firebase-database.js"></script>
</head>
<body onload="retrieveUserData()">
  <!-- NavBar Start -->
  <nav class="navbar navbar-default" id="navbar">
    <div class="container-fluid" style="padding-right: 0;">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand center" id="title"><b>Leaflet Map</b></a>
      </div>
      <div class="navbar-collapse collapse" id="bs-example-navbar-collapse-1" aria-expanded="false" style="height: 1px;">
      <!-- align right buttons -->
        <ul class="nav navbar-nav navbar-right" id="logout">
          <li><a class="btn" id="navbarStyle">Welcome back, <b><%= user.username %></b></a></li>
          <!-- Logout button, modal trigger -->
          <li><a class="btn btn-danger" data-target="#logoutModal"  data-toggle="modal" id="navbarStyle"><i class="material-icons">power_settings_new</i></a></li>
          <!-- Hidden modal -->
          <div class="modal fade" id="logoutModal">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                  <h4 class="modal-title">Logout?</h4>
                </div>
                <div class="modal-body" id="modalbody">
                  <h5>You are about to <b>logout</b>, are you sure?</h5>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                  <a type="button" class="btn btn-danger" href="/logout">Logout</a>
                </div>
              </div>
            </div>
          </div>
        </ul>
      </div>
    </div>
  </nav>


  <!-- map div -->
  <div id='map'></div>
</body>
<script>

  /////////////////////////////////////////////////////////////
  // INIT FIREBASE
  /////////////////////////////////////////////////////////////
  var config = {
    apiKey: "AIzaSyBidD56QDaYhdtyNGS-rWhSzSfmzIWSmNk",
    authDo: "awesome-93639.firebaseapp.com",
    databaseURL: "https://awesome-93639.firebaseio.com",
    storageBucket: "awesome-93639.appspot.com",
    messagingSenderId: "900291118172"
  };
  firebase.initializeApp(config);
  var database = firebase.database();

  /////////////////////////////////////////////////////////////
  // INIT BASE MAP
  /////////////////////////////////////////////////////////////
  var current = L.tileLayer('https://maps-{s}.onemap.sg/v3/Default/{z}/{x}/{y}.png', {
            detectRetina: true,
						attribution: 'Map data © contributors, <a href="http://SLA.gov.sg">Singapore Land Authority</a>',
						maxZoom: 18,
            minZoom: 11
	});

  var night = L.tileLayer('https://maps-{s}.onemap.sg/v3/Night/{z}/{x}/{y}.png', {
            detectRetina: true,
						attribution: 'Map data © contributors, <a href="http://SLA.gov.sg">Singapore Land Authority</a>',
						maxZoom: 18,
            minZoom: 11
	});

  var grey = L.tileLayer('https://maps-{s}.onemap.sg/v3/Grey/{z}/{x}/{y}.png', {
            detectRetina: true,
						attribution: 'Map data © contributors, <a href="http://SLA.gov.sg">Singapore Land Authority</a>',
						maxZoom: 18,
            minZoom: 11
	});

  var original = L.tileLayer('https://maps-{s}.onemap.sg/v3/Original/{z}/{x}/{y}.png', {
            detectRetina: true,
						attribution: 'Map data © contributors, <a href="http://SLA.gov.sg">Singapore Land Authority</a>',
						maxZoom: 18,
            minZoom: 11
	});

  var map = L.map('map', {
    center: [1.32073, 103.910827],
    zoom: 12,
    layers: [current]
  });

  // Geocoder(AKA search)
  var geocodeIcon = L.icon({
    iconUrl: 'images/123.png',
    iconSize: [50, 50],
    popupAnchor: [-6, -21]
  });

  // Geocoder(AKA search)
  L.control.geocoder('mapzen-t21iVV1', {
    panToPoint: true,
    params: {
      'boundary.country': 'SG'
    },
    markers: {
        icon: geocodeIcon
    }
  }).addTo(map);

  //Basemap configs
  var baseMaps = {
    "Default": current,
    "Night": night,
    "Grey": grey,
    "Original": original
  };

  //Overlay map configs
  var overlayMaps = {

  };

  //First load of layer control
  lcontrol = L.control.layers(baseMaps, overlayMaps).addTo(map);

  /////////////////////////////////////////////////////////////
  //FUNCTIONS BELOW ONLY
  /////////////////////////////////////////////////////////////

  //Toastr Config
  //
  toastr.options = {
    "closeButton": true,
    "debug": false,
    "newestOnTop": true,
    "progressBar": true,
    "positionClass": "toast-top-right",
    "preventDuplicates": false,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
  }

  //Retrieve markers from database
  //
  //Retrieve markers from database
  //
  function retrieveUserData() {
    var query = firebase.database().ref("Users/"+ <%= user.id %> + "/Markers/");
    query.once("value")
      .then(function(snapshot) {
        snapshot.forEach(function(childSnapshot) {
        // key will be "ada" the first time and "alan" the second time
        var key = childSnapshot.key;
        // childData will be the actual contents of the child
        var childData = childSnapshot.val();
        jsonlayer = L.geoJson(childData.mapLayer, {
          onEachFeature: function (feature, layer) {
            layer.bindPopup('<div>Layer Name: <b>' + childData.name + '</b></br>Description: ' + childData.description + '</br>Extra information: ' + childData.extraInfo + '</div>');
            //
          }
        });
        //save points as clusters to reduce lag
        var markersJSON = L.markerClusterGroup();
        markersJSON.addLayer(jsonlayer);
        map.addLayer(markersJSON);

        lcontrol.addOverlay(markersJSON, key);
      });
    });
    var query = firebase.database().ref("Users/"+ <%= user.id %> + "/Lines/");
    query.once("value")
      .then(function(snapshot) {
        snapshot.forEach(function(childSnapshot) {
        // key will be layer name
        var key = childSnapshot.key;
        // childData will be the actual contents of the child (GeoJSON)
        var childData = childSnapshot.val();
        jsonlayer = L.geoJson(childData.mapLayer, {
          onEachFeature: function (feature, layer) {
            layer.bindPopup('<div>Layer Name: <b>' + childData.name + '</b></br>Description: ' + childData.description + '</br>Extra information: ' + childData.extraInfo + '</div>');
          }
        });
        lcontrol.addOverlay(jsonlayer, key);
      });
    });
    toastr.success('Successfully retrieved all data layers linked with account <%= user.username %>', 'Success!', {timeOut: 2000});
  }
</script>
</html>
